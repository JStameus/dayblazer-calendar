class CalendarDay{constructor(e){this.date=e,this.refreshEventList()}renderEventPreview(e){let a=null;var t=e.children;for(let e=0;e<t.length;e++)t[e].dataset.date===this.date&&(a=t[e]);null!==a?this.eventList.forEach(e=>{const t=document.createElement("p");t.textContent=e.name,t.classList.add("event_preview_name"),t.classList.add(`event_type_${e.type}`);const n=document.createElement("div");n.id=`event_${e.id}`,n.classList.add("event_preview"),n.appendChild(t),a.appendChild(n)}):console.warn(`No applicable div was found for CalendarDay ${this.date}.`)}renderEventList(d){d.innerHTML="",this.eventList.forEach(e=>{let t="",n="",a="";var r;let i="";i=!0===e.finished?"event_name_finished":"event_name_unfinished","task"===e.type&&(r=e.checked?"checked":"unchecked",!1===e.finished?(t=`<h3 class="event_header_xp_value"><span>${e.xpValue}</span> XP</h3>`,a=`<div class="event_main_checkbox ${r}" id="event_checkbox_${e.id}" data-parentevent=${e.id}></div>`):(a="",t=`<h3 class="event_header_xp_value earned"><span>${e.xpValue}</span> XP</h3>`),n=`<h3 class="event_details_difficulty">Difficulty: ${e.difficulty}</h3>`);const s=document.createElement("div");s.classList.add("schedule_event"),s.classList.add(`event_type_${e.type}`),!0===e.finished&&s.classList.add("event_div_finished"),s.innerHTML=`
                <div class="schedule_event_header">
                    <h3 class="event_header_time">${e.startTime} - ${e.endTime}</h3>
                    ${t}
                </div>
                <div class="schedule_event_main">
                    <h2 class="schedule_event_name ${i}">${e.name}</h2>
                    ${a}
                </div>
                <hr>
                <div class="schedule_event_footer">
                    <p class="event_footer_description">${e.description}</p>
                    <div class="event_footer_controlpanel">
                        <div class="event_footer_controlpanel_delete" data-parentevent=${e.id}><i class="fa fa-trash"></i></div>
                        <div class="event_footer_controlpanel_edit" data-parentevent=${e.id}><i class="fa fa-edit"></i></div>
                        <div class="event_footer_controlpanel_expand" data-parentevent=${e.id}><i class="fa fa-list"></i></div>
                    </div>
                </div>
                <div class="schedule_event_details" style="display: none">
                    ${n}
                    <h3 class="event_details_start">Start: ${e.startTime}</h3>    
                    <h3 class="event_details_start">End: ${e.endTime}</h3>    
                    <h3 class="event_details_location">Location: N/A</h3>    
                </div>
            `,d.appendChild(s)})}renderSummary(e){e.innerHTML="";var t=this.calculateSummary();const n=document.createElement("div");n.classList.add("day_view_full_summary_info"),n.innerHTML=`
            <h3>Total XP: <span class="xp_earned">${t.earnedXP}</span>/<span class="xp_available">${t.totalXP}</span></h3>
            <h3>Tasks: <span class="tasks_done">${t.finishedTasks}</span>/<span class="tasks_available">${t.totalTasks}</span></h3>
        `,e.appendChild(n)}renderControlPanel(e){let t=!1,n=0;for(let e=0;e<this.eventList.length;e++)!0===this.eventList[e].checked&&n++;0<n&&(t=!0),!0===t?(e.classList.remove("inactive"),e.classList.add("active"),e.children[0].textContent="Confirm"):(e.classList.remove("active"),e.classList.add("inactive"),e.children[0].textContent="...")}renderDashBoard(){let t;const e=document.querySelector("#next_event_header_time"),n=document.querySelector("#next_event_header_xp"),a=document.querySelector("#next_event_body_name"),r=document.querySelector("#next_event_body_description");for(let e=0;e<this.eventList.length;e++){var i=this.eventList[e];if("reminder"!=i.type&&!i.isFinished){t=i;break}}t?(e.textContent=t.startTime,n.innerHTML="task"===t.type?`<span>${t.xpValue}</span> XP`:"",a.textContent=t.name,r.textContent=t.description):(e.textContent="--:--",n.textContent="",a.textContent="None",r.textContent="You have no more events scheduled for today.")}refreshEventList(){let e=globalEventList.filter(e=>e.date.toString().trim()===this.date.toString().trim());var t=e.sort((e,t)=>{e=parseInt(e.startTime.slice(0,2)),t=parseInt(t.startTime.slice(0,2));return e<t?-1:t<e?1:0});this.eventList=t}calculateSummary(){let t=0,n=0,a=0,r=0,i=0;for(let e=0;e<this.eventList.length;e++){var s=this.eventList[e];if("event"!==s.type){if("reminder"!==s.type){"task"===s.type&&r++;let e=0;switch(s.difficulty){case 1:e=150,n+=e;break;case 2:e=400,n+=e;break;case 3:e=750,n+=e}!0===s.finished&&(t+=e,a++)}}else i++}return{earnedXP:t,totalXP:n,finishedTasks:a,totalTasks:r,totalEvents:i}}finishCheckedEvents(){this.eventList.forEach(e=>{!0===e.checked&&(e.finished=!0,e.checked=!1)})}}class CalendarEvent{constructor(e){this.id=e.id,this.name=e.name,this.description=e.description,this.date=e.date,this.startTime=e.startTime,this.endTime=e.endTime,this.type=e.type,this.difficulty=e.difficulty,this.xpValue=e.xpValue,this.finished=e.finished,this.checked=!1}updateEventInfo(e){this.name=e.name,this.description=e.description,this.date=e.date,this.startTime=e.startTime,this.endTime=e.endTime,this.type=e.type,this.finished=e.finished,this.difficulty=e.difficulty,this.xpValue=e.xpValue,console.log(`Updated CalendarEvent: ${this.id}`)}}function getDaysInMonth(e){return new Date(e.getFullYear(),e.getMonth()+1,0).getDate()}function getFirstWeekDayInMonth(e){var t=e.getMonth(),e=e.getFullYear();const n=new Date(e,t,1);switch(n.toString().split(" ")[0]){case"Mon":return{weekday:"Monday",index:0};case"Tue":return{weekday:"Tuesday",index:1};case"Wed":return{weekday:"Wednesday",index:2};case"Thu":return{weekday:"Thursday",index:3};case"Fri":return{weekday:"Friday",index:4};case"Sat":return{weekday:"Saturday",index:5};case"Sun":return{weekday:"Sunday",index:6};default:return{weekDay:"UNDEFINED",index:0}}}function getDateString(e,t,n){return`${e=1===e.toString().length?"0"+e:e}-${t=1===t.toString().length?"0"+t:t}-${n}`}function createCalendarDayData(t){const n=[];var a=getDaysInMonth(t);for(let e=0;e<a;e++){var r=getDateString(e+1,t.getMonth()+1,t.getFullYear());n.push(new CalendarDay(r))}return n}function createEventList(e){const t=[];return e.events.forEach(e=>{t.push(new CalendarEvent(e))}),t}function updateEventList(e){let t=[];return e.forEach(e=>{e.eventList.forEach(e=>{t.push(e)})}),t}function createDayDiv(e,t){const n=document.createElement("h4");n.classList.add("day_date_number"),n.textContent=t;const a=document.createElement("div");return a.className="monthView_day",a.classList.add(e),a.appendChild(n),a}function createCalendarGrid(t,n,e){const a=new Date;a.setMonth(t.getMonth()-1);var r=getFirstWeekDayInMonth(t),i=getDaysInMonth(a);let s=[];for(let e=1;e<=i;e++)s.push(e);s=s.slice(Math.max(s.length-r.index,0));for(let e=0;e<r.index;e++){var d=getDateString(s[e],a.getMonth()+1,a.getFullYear());const u=createDayDiv("previous",s[e]);u.dataset.date=d,n.appendChild(u)}for(let e=0;e<daysInCurrentMonth;e++){var o=getDateString(e+1,t.getMonth()+1,t.getFullYear());const h=createDayDiv("current",e+1);h.dataset.date=o,n.appendChild(h)}var l=e-n.children.length;for(let e=0;e<l;e++){var c=getDateString(e+1,nextMonth.getMonth()+1,nextMonth.getFullYear());const v=createDayDiv("next",e+1);v.dataset.date=c,n.appendChild(v)}n.children[t.getDate()+r.index-1].classList.add("today")}function renderDateInfo(e){const t=document.querySelector("#timeinfo_date");var n=e.getDate();let a="";switch(e.getMonth()+1){case 1:a="January";break;case 2:a="February";break;case 3:a="March";break;case 4:a="April";break;case 5:a="May";break;case 6:a="June";break;case 7:a="July";break;case 8:a="August";break;case 9:a="September";break;case 10:a="October";break;case 11:a="November";break;case 12:a="December";break;default:a="UNDEFINED"}e=e.getFullYear();t.textContent=`${a} ${n}, ${e}`}function renderTimeInfo(e=!0){let t=new Date,n=t.getHours();1===n.toString().length&&(n="0"+n);let a=t.getMinutes();1===a.toString().length&&(a="0"+a);const r=document.querySelector("#timeinfo_time");r.textContent=`${n}:${a}`,e&&setInterval(()=>{t=new Date,n=t.getHours(),1===n.toString().length&&(n="0"+n),a=t.getMinutes(),1===a.toString().length&&(a="0"+a),r.textContent=`${n}:${a}`},3e3)}function initCalendar(e,t,n){var a=getFirstWeekDayInMonth(e);let r=0;r=5<=a.index?42:35,createCalendarGrid(e,t,r),n.forEach(e=>{e.renderEventPreview(t)}),n[e.getDate()-1].renderDashBoard(),renderDateInfo(e),renderTimeInfo(e)}function postEventList(e,t,n){let a=[];e.forEach(e=>{e.eventList.forEach(e=>{a.push(e)})});e={owner:t,guests:[],events:a},e={method:"POST",mode:"cors",headers:{"Content-Type":"application/json","User-Name":`${t}`,"Board-Token":`${n}`},body:JSON.stringify(e)};console.log("Sending POST..."),fetch(`${BASEURL}`,e).then(e=>e.json()).then(e=>console.log(e)).catch(e=>console.log(e))}function createRandomID(){let t="";var n="abcdefghijklmnopqrstuvwxyz",a="1234567890";for(let e=0;e<2;e++)t+=n[Math.floor(Math.random()*n.length)];for(let e=0;e<3;e++)t+=a[Math.floor(Math.random()*a.length)];return t}function addNewEvent(e){let t={};const n=document.querySelector("#editor_input_name");t.name=n.value;var a=document.querySelector("#editor_input_type");t.type=a.value;const r=document.querySelector("#editor_input_description");t.description=r.value;let i=document.querySelector("#editor_input_start_hour").value,s=document.querySelector("#editor_input_start_minute").value;2!=i.toString().length&&(i="0"+i),2!=s.toString().length&&(s="0"+s),t.startTime=`${i}:${s}`;let d=document.querySelector("#editor_input_end_hour").value,o=document.querySelector("#editor_input_end_minute").value;2!=d.toString().length&&(d="0"+d),2!=o.toString().length&&(o="0"+o),t.endTime=`${d}:${o}`;const l=document.querySelector("#editor_input_difficulty");switch(t.difficulty=parseInt(l.value),t.difficulty){case 1:t.xpValue=150;break;case 2:t.xpValue=400;break;case 3:t.xpValue=750;break;default:return console.log(t.difficulty),void alert("Invalid difficulty rating! Try again.")}t.checked=!1,t.finished=!1,t.id=createRandomID(),t.date=e.date;a=new CalendarEvent(t);e.eventList.push(a),n.value="",r.value="",l.value=1}function updateEventEditor(t="undefined"){if("add"===editorMode){const n=document.querySelector("#editor_input_name");n.value="";const a=document.querySelector("#editor_input_type");a.value="";const r=document.querySelector("#editor_input_description");r.value="";const i=document.querySelector("#editor_input_difficulty");i.value=1}else if("edit"===editorMode){var e=selectedCalendarDay.eventList.find(e=>e.id===t);console.log(e);const s=document.querySelector("#editor_input_name");s.value=e.name;const d=document.querySelector("#editor_input_type");d.value=e.type;const o=document.querySelector("#editor_input_description");o.value=e.description;const l=document.querySelector("#editor_input_difficulty");l.value=e.difficulty}}function updateEvent(t){let e=selectedCalendarDay.eventList.find(e=>e.id===t);var n=document.querySelector("#editor_input_name"),a=document.querySelector("#editor_input_type"),r=document.querySelector("#editor_input_description"),i=document.querySelector("#editor_input_difficulty");let s=document.querySelector("#editor_input_start_hour").value,d=document.querySelector("#editor_input_start_minute").value;2!=s.toString().length&&(s="0"+s),2!=d.toString().length&&(d="0"+d);var o=`${s}:${d}`;let l=document.querySelector("#editor_input_end_hour").value,c=document.querySelector("#editor_input_end_minute").value;2!=l.toString().length&&(l="0"+l),2!=c.toString().length&&(c="0"+c);var u=`${l}:${c}`;e.name=n.value,e.type=a.value,e.description=r.value,e.difficulty=i.value,e.startTime=o,e.endTime=u}function removeEvent(t,n){for(let e=0;e<n.length;e++)n[e].id===t&&n.splice(e,1)}const userData={user:"jstameus",token:"abc123"},getRequestOptions={method:"GET",mode:"cors",headers:{"Content-Type":"application/json","User-Name":`${userData.user}`,"Board-Token":`${userData.token}`}},BASEURL="http://localhost:3000/api",QUERY="u=jstameus";var globalCalendarDayList=[],globalEventList=[],selectedCalendarDay=null,editorMode="add",selectedEventID="",userXP={currentXP:200,requiredXP:4e3};const currentDate=new Date,daysInCurrentMonth=getDaysInMonth(currentDate),firstDayOfCurrentMonth=getFirstWeekDayInMonth(currentDate),previousMonth=new Date;previousMonth.setMonth(currentDate.getMonth()-1);const nextMonth=new Date;nextMonth.setMonth(currentDate.getMonth()+1);var dayGrid=document.querySelector("#monthView_dayGrid");dayGrid.addEventListener("click",t=>{switch(t.target.classList[1]){case"previous":case"next":break;case"current":const e=globalCalendarDayList.find(e=>{if(t.target.dataset.date===e.date)return!0});selectedCalendarDay=e,e.renderEventList(scheduleContainer),e.renderSummary(summaryContainer),toggleElementVisibility(dayView,screenBlocker,210)}});const progressBarFill=document.querySelector("#progressBar_fill"),xpDisplayText=document.querySelector("#footer_xpDisplay"),dayView=document.querySelector("#day_view_full"),screenBlocker=document.querySelector("#screen_blocker"),summaryContainer=document.querySelector("#day_view_full_summary"),scheduleContainer=document.querySelector("#day_view_full_schedule"),checkoutButton=document.querySelector("#day_view_full_controlpanel_checkout"),addNewButton=document.querySelector("#day_view_full_controlpanel_add"),confirmNewEventButton=document.querySelector("#event_editor_confirm_button"),closeDayViewButton=document.querySelector("#day_view_button_close"),closeEditorButton=document.querySelector("#editor_header_button");scheduleContainer.addEventListener("click",n=>{let t=null;if(n.target.classList.contains("event_main_checkbox")){t=n.target;const a=selectedCalendarDay.eventList.find(e=>e.id===t.dataset.parentevent);t.classList.contains("unchecked")?(t.classList.remove("unchecked"),t.classList.add("checked"),a.checked=!0):t.classList.contains("checked")?(t.classList.remove("checked"),t.classList.add("unchecked"),a.checked=!1):console.warn(`${t.id} has no 'checked/unchecked' class!`),selectedCalendarDay.renderControlPanel(checkoutButton)}if(n.target.classList.contains("event_footer_controlpanel_delete")){let t=selectedCalendarDay.eventList.find(e=>e.id===n.target.dataset.parentevent);var e=selectedCalendarDay.eventList.filter(e=>e.id!=t.id);selectedCalendarDay.eventList=e,selectedCalendarDay.renderEventPreview(dayGrid),selectedCalendarDay.renderEventList(scheduleContainer),selectedCalendarDay.renderSummary(summaryContainer),postEventList(globalCalendarDayList,userData.user,userData.token)}n.target.classList.contains("event_footer_controlpanel_edit")&&(e=selectedCalendarDay.eventList.find(e=>e.id===n.target.dataset.parentevent),selectedEventID=e.id,editorMode="edit",updateEventEditor(selectedEventID),toggleElementVisibility(editorWindow,editorBlocker,210))}),closeDayViewButton.addEventListener("click",()=>{toggleElementVisibility(dayView,screenBlocker,210),selectedCalendarDay=null}),closeEditorButton.addEventListener("click",()=>{toggleElementVisibility(editorWindow,editorBlocker,210)}),checkoutButton.addEventListener("click",()=>{selectedCalendarDay.finishCheckedEvents(),selectedCalendarDay.renderControlPanel(checkoutButton),selectedCalendarDay.renderEventList(scheduleContainer),selectedCalendarDay.renderSummary(summaryContainer),postEventList(globalCalendarDayList,userData.user,userData.token)}),addNewButton.addEventListener("click",()=>{toggleElementVisibility(editorWindow,editorBlocker,210),editorMode="add"}),confirmNewEventButton.addEventListener("click",()=>{"add"===editorMode?addNewEvent(selectedCalendarDay,globalEventList):"edit"===editorMode&&updateEvent(selectedEventID),selectedCalendarDay.renderEventPreview(dayGrid),selectedCalendarDay.renderEventList(scheduleContainer),selectedCalendarDay.renderSummary(summaryContainer),toggleElementVisibility(editorWindow,editorBlocker,210),postEventList(globalCalendarDayList,userData.user,userData.token)});const editorBlocker=document.querySelector("#editor_blocker"),editorWindow=document.querySelector("#event_editor"),rightMenu=document.querySelector("#menu_right"),rightToggleButton=document.querySelector("#menu_right_toggle_button");function initApp(){fetch(`${BASEURL}/${QUERY}`,getRequestOptions).then(e=>e.json()).then(e=>{e.events&&(e.events.forEach(e=>{globalEventList.push(e)}),globalCalendarDayList=createCalendarDayData(currentDate))}).then(()=>{globalEventList=[],initCalendar(currentDate,dayGrid,globalCalendarDayList)}).catch(e=>{console.log(`ERROR: ${e}`)}),updateProgressBar(progressBarFill,xpDisplayText,userXP)}function updateProgressBar(e,t,n){var a=n.currentXP/n.requiredXP*100;e.style.width=`${a}%`,t.textContent=`${n.currentXP}/${n.requiredXP}`}function toggleElementVisibility(e,t=null,n=200,a=!1){if(!0===a)return e.style.display="block",void(t&&(t.style.display="block",t.classList.add("enabled"),t.classList.remove("disabled")));"none"===e.style.display?(e.style.display="block",t&&(t.style.display="block",t.classList.add("enabled"),t.classList.remove("disabled"))):(e.style.display="none",t&&(t.classList.remove("enabled"),t.classList.add("disabled"),setTimeout(()=>{t.style.display="none"},n)))}rightToggleButton.addEventListener("click",()=>{"open"===rightMenu.className?rightMenu.className="closed":rightMenu.className="open"}),window.addEventListener("DOMContentLoaded",()=>{initApp()});