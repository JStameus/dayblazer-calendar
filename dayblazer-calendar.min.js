function getDaysInMonth(date){return new Date(date.getFullYear(),date.getMonth()+1,0).getDate()}function getFirstWeekDayInMonth(selectedDate){const month=selectedDate.getMonth();const year=selectedDate.getFullYear();const firstDayDate=new Date(year,month,1);const firstDayDateSlice=firstDayDate.toString().split(" ")[0];switch(firstDayDateSlice){case"Mon":return{weekday:"Monday",index:0};case"Tue":return{weekday:"Tuesday",index:1};case"Wed":return{weekday:"Wednesday",index:2};case"Thu":return{weekday:"Thursday",index:3};case"Fri":return{weekday:"Friday",index:4};case"Sat":return{weekday:"Saturday",index:5};case"Sun":return{weekday:"Sunday",index:6};default:return{weekDay:"UNDEFINED",index:0}}}function getDateString(day,month,year){if(day.toString().length===1){day="0"+day}if(month.toString().length===1){month="0"+month}return`${day}-${month}-${year}`}function createCalendarDayData(selectedDate,dayList,clearDayList=true){if(clearDayList){dayList=[]}const numberOfDays=getDaysInMonth(selectedDate);for(let i=0;i<numberOfDays;i++){const dateString=getDateString(i+1,selectedDate.getMonth()+1,selectedDate.getFullYear());dayList.push(new CalendarDay(dateString))}}function createDayDiv(type,day){const dateLabel=document.createElement("h4");dateLabel.classList.add("day_date_number");dateLabel.textContent=day;const newDiv=document.createElement("div");newDiv.className="monthView_day";newDiv.classList.add(type);newDiv.appendChild(dateLabel);return newDiv}function createCalendarGrid(selectedDate,container,gridItemAmount){const previousMonth=new Date;previousMonth.setMonth(selectedDate.getMonth()-1);const firstDay=getFirstWeekDayInMonth(selectedDate);const daysInPreviousMonth=getDaysInMonth(previousMonth);let remainder=[];for(let c=1;c<=daysInPreviousMonth;c++){remainder.push(c)}remainder=remainder.slice(Math.max(remainder.length-firstDay.index,0));for(let i=0;i<firstDay.index;i++){const currentDateString=getDateString(remainder[i],previousMonth.getMonth()+1,previousMonth.getFullYear());const newDiv=createDayDiv("previous",remainder[i]);newDiv.dataset.date=currentDateString;container.appendChild(newDiv)}for(let i=0;i<daysInCurrentMonth;i++){const currentDateString=getDateString(i+1,selectedDate.getMonth()+1,selectedDate.getFullYear());const newDiv=createDayDiv("current",i+1);newDiv.dataset.date=currentDateString;container.appendChild(newDiv)}const daysRemaining=gridItemAmount-container.children.length;for(let i=0;i<daysRemaining;i++){const currentDateString=getDateString(i+1,nextMonth.getMonth()+1,nextMonth.getFullYear());const newDiv=createDayDiv("next",i+1);newDiv.dataset.date=currentDateString;container.appendChild(newDiv)}container.children[selectedDate.getDate()+firstDay.index-1].classList.add("today")}function createEventDiv(event){const nameLabel=document.createElement("p");nameLabel.textContent=event.name;nameLabel.classList.add("event_preview_name");nameLabel.classList.add(`event_type_${event.type}`);const newDiv=document.createElement("div");newDiv.id=`event_${event.id}`;newDiv.classList.add("event_preview");newDiv.appendChild(nameLabel);return newDiv}function initEvents(eventList,container){const nodeList=container.children;for(let i=0;i<nodeList.length;i++){const currentDayDiv=nodeList[i];eventList.forEach(obj=>{if(obj.date===currentDayDiv.dataset.date){currentDayDiv.appendChild(createEventDiv(obj))}})}}function initCalendar(selectedDate,eventList,dayList,container){const firstDayOfSelectedMonth=getFirstWeekDayInMonth(selectedDate);let maxGridItems=0;if(firstDayOfSelectedMonth.index>=5){maxGridItems=42}else{maxGridItems=35}createCalendarGrid(selectedDate,container,maxGridItems);container.addEventListener("click",e=>{switch(e.target.classList[1]){case"previous":break;case"next":break;case"current":default:break}});initEvents(eventList,container)}class CalendarDay{constructor(dateString){this.date=dateString;this.eventList=this.refreshEventList()}updateMenuView(){}refreshEventList(){const matchingEvents=globalEventList.filter(obj=>{if(obj.date.toString().trim()===this.date.toString().trim()){return true}else{return false}});return matchingEvents}}class CalendarEvent{constructor(eventData){this.id=eventData.id;this.name=eventData.name;this.description=eventData.description;this.date=eventData.date;this.startTime=eventData.startTime;this.endTime=eventData.endTime;this.type=eventData.type}}const userData={user:"jstameus",token:"abc123"};const requestOptions={method:"GET",mode:"cors",headers:{"Content-Type":"application/json","User-Name":`${userData.user}`,"Board-Token":`${userData.token}`}};const BASEURL="http://localhost:3000/api";const QUERY=`u=jstameus`;var userXP={currentXP:200,requiredXP:4e3};const currentDate=new Date;const daysInCurrentMonth=getDaysInMonth(currentDate);const firstDayOfCurrentMonth=getFirstWeekDayInMonth(currentDate);const previousMonth=new Date;previousMonth.setMonth(currentDate.getMonth()-1);const nextMonth=new Date;nextMonth.setMonth(currentDate.getMonth()+1);var globalCalendarDayList=[];var globalEventList=[];var dayGrid=document.querySelector("#monthView_dayGrid");const progressBarFill=document.querySelector("#progressBar_fill");const xpDisplayText=document.querySelector("#footer_xpDisplay");const dayView=document.querySelector("#day_view_full");const screenBlocker=document.querySelector("#screen_blocker");const rightMenuContent=document.querySelector("#menu_right_content");const closeDayViewButton=document.querySelector("#day_view_button_close");closeDayViewButton.addEventListener("click",()=>{toggleDayView()});const showTodayButton=document.querySelector("#sideMenu_showAgenda");showTodayButton.addEventListener("click",()=>{toggleDayView()});const rightToggleButton=document.querySelector("#menu_right_toggleButton");rightToggleButton.addEventListener("click",()=>{if(rightMenuContent.style.display==="none"){rightMenuContent.style.display="block";rightToggleButton.textContent="-"}else{rightMenuContent.style.display="none";rightToggleButton.textContent="+"}});function initApp(){fetch(`${BASEURL}/${QUERY}`,requestOptions).then(response=>response.json()).then(data=>{if(data.events){data.events.forEach(obj=>{globalEventList.push(new CalendarEvent(obj))})}initCalendar(currentDate,globalEventList,dayGrid)}).catch(err=>{console.log(`ERROR: ${err}`)});updateProgressBar(progressBarFill,xpDisplayText,userXP)}window.addEventListener("DOMContentLoaded",()=>{initApp()});function updateProgressBar(progressBarFillEl,xpTextEl,xpPool){const newPercentage=xpPool.currentXP/xpPool.requiredXP*100;progressBarFillEl.style.width=`${newPercentage}%`;xpTextEl.textContent=`${xpPool.currentXP}/${xpPool.requiredXP}`}function toggleElementVisibility(element,backgroundBlocker=null,fadeTime=200){if(element.style.display==="none"){element.style.display="block";if(backgroundBlocker){backgroundBlocker.style.display="block";backgroundBlocker.classList.add("enabled");backgroundBlocker.classList.remove("disabled")}}else{element.style.display="none";if(backgroundBlocker){backgroundBlocker.classList.remove("enabled");backgroundBlocker.classList.add("disabled");setTimeout(()=>{backgroundBlocker.style.display="none"},fadeTime)}}}